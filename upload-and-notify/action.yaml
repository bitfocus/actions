name: 'Upload build and notify BitFocus API Server'
description: 'Upload build and notify BitFocus API Server'
inputs:
  long-version:
    description: 'Long version number (eg 1.0.0+1234-abcdefg)'
    required: true
    default: ''
  beta-branch:
    description: 'Name of branch for beta builds'
    required: true
    default: ''
  dev-branch:
    description: 'Name of branch for experimental builds'
    required: false
    default: ''

  source-filename:
    description: 'File to upload'
    required: true
    default: ''
  destination-filename:
    description: 'Target filename in s3'
    required: true
    default: ''
  s3-host:
    description: 'Server endpoint'
    required: true
    default: 's4.bitfocus.io'
  s3-bucket:
    description: 'Bucket to upload to'
    required: true
    default: ''
  s3-access-key:
    description: 'Access Key'
    required: true
    default: ''
  s3-secret-key:
    description: 'Secret Key'
    required: true
    default: ''

  api-product:
    description: 'Name of the product'
    required: true
    default: ''
  api-target:
    description: 'Build target (linux-img/linux-deb/linux-tgz/mac-intel/mac-arm/win-x86/win-x64)'
    required: true
    default: ''
  api-secret:
    description: 'Secret for the api server'
    required: true
    default: ''
outputs:
  branch:
    description: "Type of build produced"
    value: ${{ steps.versions.outputs.branch }}
runs:
  using: 'composite'
  steps:
    - id: versions
      name: Determine versions
      shell: bash
      run: |
        if [[ "${{ github.ref }}" == refs/tags/* ]]
         then
           VERSION="${{ github.ref_name }}"
           echo "stable release ${VERSION}"
           echo "branch=stable" >> $GITHUB_OUTPUT
           echo "version=${VERSION}" >> $GITHUB_OUTPUT
         elif [[ "${{ github.ref }}" == refs/heads/* && "${{ github.ref_name }}" == "${{ inputs.beta-branch }}" ]]
         then
           VERSION="${{ inputs.long-version }}"
           echo "beta build ${VERSION}"
           echo "branch=beta" >> $GITHUB_OUTPUT
           echo "version=${VERSION}" >> $GITHUB_OUTPUT
         elif [[ "${{ github.ref }}" == refs/heads/* && "${{ github.ref_name }}" == "${{ inputs.dev-branch }}" ]]
         then
           VERSION="${{ inputs.long-version }}"
           echo "dev build ${VERSION}"
           echo "branch=experimental" >> $GITHUB_OUTPUT
           echo "version=${VERSION}" >> $GITHUB_OUTPUT
         else
           echo "not uploading"
         fi

    - name: Upload and Notify API Server
      if: ${{ steps.versions.outputs.version && steps.versions.outputs.branch }}
      uses: bitfocus/actions/upload-and-notify-for-branch@main
      with:
        source-filename: ${{ inputs.source-filename }}
        destination-filename: ${{ inputs.destination-filename }}
        s3-host: ${{ inputs.s3-host }}
        s3-bucket: ${{ inputs.s3-bucket }}
        s3-access-key: ${{ inputs.s3-access-key }}
        s3-secret-key: ${{ inputs.s3-secret-key }}

        api-version: ${{  steps.versions.outputs.version }}
        api-branch: ${{ steps.versions.outputs.branch }}
        api-product: ${{ inputs.api-product }}
        api-target: ${{ inputs.api-target }}
        api-secret: ${{ inputs.api-secret }}
